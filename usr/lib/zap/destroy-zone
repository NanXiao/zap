#!/bin/ksh
#
# stop, delete, and unconfigure a zone
#
ZNAME=""
ZSDIR="/var/zap/zones"

while getopts "z:" opt; do
case $opt in
z)
	ZNAME="$OPTARG"
	;;
esac
done

THISZONE=`/sbin/zonename`
if [ "X$THISZONE" != "Xglobal" ]; then
    echo "ERROR: zone management is only possible in the global zone"
    exit 1
fi

if [[ -z $ZNAME ]]; then
    echo "ERROR: zone name must be specified"
    exit 1
fi

#
# it makes no sense to destroy the global zone
#
if [ "X$ZNAME" = "Xglobal" ]; then
    echo "ERROR: unable to delete the global zone"
    exit 1
fi

#
# check if this zone is a parent of any other zones
#
PZCHECK=`grep "^parent_zone: $ZNAME\$" ${ZSDIR}/zconfig.*`
if [[ -n $PZCHECK ]]; then
    echo "Zone $ZNAME is a parent for the following zones, and cannot be deleted"
    echo "until all the child zones have been deleted"
    for pzc in `grep "^parent_zone: $ZNAME\$" ${ZSDIR}/zconfig.* | awk -F: '{print $1}'`
    do
	grep '^zone:' $pzc | awk '{print "  "$NF}'
    done
    exit 1
fi

#
# check it exists, otherwise behaviour is correct but messy
#
/usr/sbin/zoneadm -z $ZNAME list > /dev/null 2>&1
ZEXISTS=$?
if [ $ZEXISTS -eq 0 ]; then
    /usr/sbin/zoneadm -z $ZNAME halt
    echo "Halted zone $ZNAME"
    /usr/sbin/zoneadm -z $ZNAME uninstall -F
    echo "Uninstalled zone $ZNAME"
    /usr/sbin/zonecfg -z $ZNAME delete -F
    echo "Deleted zone $ZNAME"
    if [ -x ${ZSDIR}/destroy.${ZNAME} ]; then
	${ZSDIR}/destroy.${ZNAME}
	echo "Cleaned up after zone $ZNAME"
	/usr/bin/rm -f ${ZSDIR}/destroy.${ZNAME}
    fi
    if [ -f ${ZSDIR}/zconfig.${ZNAME} ]; then
	/usr/bin/rm -f ${ZSDIR}/zconfig.${ZNAME}
    fi
else
    echo "ERROR: No such zone $ZNAME"
fi
