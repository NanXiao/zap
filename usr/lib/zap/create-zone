#!/bin/ksh
#
# Create a zone
#
# Usage:
#  -T template (implies sparse)
#  -t brand - sparse or whole [default sparse]
#  -z zone_name - zone name [required]
#  -i IPv4 address [can be multiple]
#  -d directory to create [can be multiple]
#  -o overlay for partial root [can be multiple, passed to install]
#  -O add overlay [can be multiple, passed to install]
#  -U share user and their homedir with the zone
#
# FIXMES:
# add IPv6
# add appstack overlays for sparse zones
# inherit dirs (like I do for sfw)
# dedicated stack and vnic creation
#

ZFSBASE="/export/zonedata"
ZROOTBASE="/export/zones"
ZBRAND=TRIBsparse
ZNAME=""
ZIP4=""
ZOVERLAY=""
ZADDOVERLAY=""
ZDIRS=""
ZUSERS=""
ZTEMPLATE=""

usage() {
  echo "Usage: $0 -z zone_name [-t whole|sparse] [-T template]"
  echo "  [-i ip_address] [-d extra_dir] [-o overlay] [-O overlay] [-U user]"
  exit 1
}

while getopts "T:t:z:i:o:O:d:U:" opt; do
case $opt in
T)
	ZTEMPLATE="$OPTARG"
	;;
t)
	ZBRAND="$OPTARG"
	;;
z)
	ZNAME="$OPTARG"
	;;
i)
	ZIP4="${ZIP4} $OPTARG"
	;;
o)
	ZOVERLAY="${ZOVERLAY} $OPTARG"
	;;
O)
	ZADDOVERLAY="${ZADDOVERLAY} $OPTARG"
	;;
d)
	ZDIRS="${ZDIRS} $OPTARG"
	;;
U)
	ZUSERS="${ZUSERS} $OPTARG"
	;;
esac
done

THISZONE=`/sbin/zonename`
if [ "X$THISZONE" != "Xglobal" ]; then
    echo "ERROR: zone management is only possible in the global zone"
    exit 1
fi

if [[ -z $ZNAME ]]; then
   echo "ERROR: zone name must be specified"
   usage
fi

#
# you can't create the global zone
#
if [ "X$ZNAME" = "Xglobal" ]; then
    echo "ERROR: global zone is reserved"
    exit 1
fi

#
# normalize the brand, reject unknown brands
#
case $ZBRAND in
sparse|TRIBsparse)
	ZBRAND="TRIBsparse"
	;;
whole|TRIBwhole)
	ZBRAND="TRIBwhole"
	;;
*)
	echo "ERROR: unrecognized brand $ZBRAND"
	usage
	;;
esac

#
# verify arguments against brands
#
case $ZBRAND in
TRIBsparse)
	if [[ -n $ZOVERLAY || -n $ZADDOVERLAY ]]; then
	   echo "ERROR: cannot specify overlays for sparse-root zones"
	   usage
	fi
	;;
TRIBwhole)
	if [[ -n $ZTEMPLATE ]]; then
	    echo "ERROR: templates must be sparse-root"
	    usage
	fi
esac

#
# check if the zone already exists
#
/usr/sbin/zoneadm -z $ZNAME list > /dev/null 2>&1
ZEXISTS=$?
if [ $ZEXISTS -eq 0 ]; then
    echo "ERROR: zone $ZNAME already exists"
    exit 1
fi

#
# if given users to share, verify they and their home directory exist
# the assumption is that the user and their home directory
# are local, hence the explict check against /etc/passwd rather than
# getent which may select from a nameservice
#
if [[ -n $ZUSERS ]]; then
    for TUSER in $ZUSERS
    do
	chk=`grep "^${TUSER}:" /etc/passwd`
	if [ -z "${chk}" ]; then
	    echo "ERROR: user $TUSER doesn't exist, cannot share"
	    exit 1
	fi
	DIR=`grep "^${TUSER}:" /etc/passwd | awk -F: '{print $6}'`
	if [ -z "${DIR}" ]; then
	    echo "ERROR: home for user $TUSER doesn't exist, cannot share"
	    exit 1
	fi
    done
fi

#
# construct a zone configuration file
#

#
# we overload ZBRAND with the template; the actual brand is
# specified in the template, and note that create -t actually
# refers to a template
#
if [[ -n $ZTEMPLATE ]]; then
    ZBRAND=TRIBtemplate-${ZTEMPLATE}
fi

create_configuration() {
echo create -t $ZBRAND
echo set autoboot=true
echo set zonepath=${ZROOTBASE}/${ZNAME}
for IP in $ZIP4
do
	ZIFACE=`/usr/sbin/route -n get $IP | grep interface: | awk '{print $NF}'`
	echo add net
	echo set physical=$ZIFACE
	echo set address=${IP}/24
	echo end
done
for DIR in $ZDIRS
do
	mkdir -p ${ZFSBASE}/${ZNAME}${DIR}
	echo add fs
	echo set dir=${DIR}
	echo set special=${ZFSBASE}/${ZNAME}${DIR}
	echo set type=lofs
	echo end
done
for TUSER in $ZUSERS
do
	echo add fs
	DIR=`grep "^${TUSER}:" /etc/passwd | awk -F: '{print $6}'`
	echo set dir=${DIR}
	echo set special=${DIR}
	echo set type=lofs
	echo end
	echo add admin
	echo set user=${TUSER}
	echo set auths=manage
	echo end
done
echo verify
echo commit
}

create_install_opts() {
for OVL in $ZOVERLAY
do
	printf " -o $OVL"
done
for OVL in $ZADDOVERLAY
do
	printf " -O $OVL"
done
}

#
# create any missing zfs datasets
#
if [[ -n ${ZDIRS} ]]; then
   ZPARENT=`dirname ${ZFSBASE}`
   ZDPARENT=`/usr/sbin/zfs list -H ${ZPARENT} | awk '{print $1}'`
   ZREALNAME=`echo $ZFSBASE | sed s:${ZPARENT}:${ZDPARENT}:`
   if [[ ! -d ${ZFSBASE} ]]; then
      /usr/sbin/zfs create ${ZREALNAME}
   fi
   if [[ ! -d ${ZFSBASE}/${ZNAME} ]]; then
      /usr/sbin/zfs create ${ZREALNAME}/${ZNAME}
   fi
fi
if [[ ! -d ${ZROOTBASE} ]]; then
   ZPARENT=`dirname ${ZROOTBASE}`
   ZDPARENT=`/usr/sbin/zfs list -H ${ZPARENT} | awk '{print $1}'`
   ZREALNAME=`echo $ZROOTBASE | sed s:${ZPARENT}:${ZDPARENT}:`
   /usr/sbin/zfs create ${ZREALNAME}
fi

ZCFGFILE=/tmp/zap.zcfg.`date '+%F-%T'`.$$
create_configuration > ${ZCFGFILE}

/usr/sbin/zonecfg -z ${ZNAME} -f ${ZCFGFILE}

/usr/sbin/zoneadm -z ${ZNAME} install `create_install_opts`

#
# copy the shared user accounts specified into the zone
# and allow them the root role
#
for TUSER in $ZUSERS
do
    grep "^${TUSER}:" /etc/passwd >> ${ZROOTBASE}/${ZNAME}/root/etc/passwd
    grep "^${TUSER}:" /etc/shadow >> ${ZROOTBASE}/${ZNAME}/root/etc/shadow
    echo "${TUSER}::::roles=root" >> ${ZROOTBASE}/${ZNAME}/root/etc/user_attr
done

#
# do some minimalist configuration of the zone
#
cp /etc/resolv.conf ${ZROOTBASE}/${ZNAME}/root/etc

/usr/sbin/zoneadm -z ${ZNAME} boot
rm $ZCFGFILE
