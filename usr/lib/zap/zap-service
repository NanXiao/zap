#!/bin/ksh
#
# SMF service manager for zap
#
# The overlay's .ovl file may contain SERVICE= statements
# that name an SMF fmri.
#
# -list: just list the service entries in the overlay
# -show: run svcs to show the status of any services
# -enable: enable the services synchronously, in order
# -disable: disable the services synchronously, in reverse order
#
# The two query forms are silent if given an invalid overlay
# The two action forms error out if given an invalid overlay
#

ODIR="/var/sadm/overlays"

list_services() {
    IOVL=${ODIR}/installed/$1
    if [ ! -f $IOVL ]; then
	exit 0
    fi
    FOVL=${ODIR}/$1.ovl
    if [ ! -f $FOVL ]; then
	exit 0
    fi
    grep '^SERVICE=' $FOVL | /usr/bin/sed s:SERVICE=::
}

rev_list_services() {
    IOVL=${ODIR}/installed/$1
    if [ ! -f $IOVL ]; then
	exit 0
    fi
    FOVL=${ODIR}/$1.ovl
    if [ ! -f $FOVL ]; then
	exit 0
    fi
    grep '^SERVICE=' $FOVL | /usr/bin/sed s:SERVICE=:: | rev -l
}

show_services() {
    SVC_LIST=`list_services $1`
    if [ -n "$SVC_LIST" ]; then
	/usr/bin/svcs -p $SVC_LIST
    fi
}

verify() {
    if [ ! -f /var/sadm/overlays/${1}.ovl ]; then
	echo "ERROR: $1 is not a valid overlay"
	exit 1
    fi
    if [ ! -f /var/sadm/overlays/installed/$1 ]; then
	echo "ERROR: overlay $1 is not installed"
	exit 1
    fi
}

enable_services() {
    verify $1
    for SVC in `list_services $1`
    do
	/usr/sbin/svcadm enable -rs $SVC
    done
}

disable_services() {
    verify $1
    for SVC in `rev_list_services $1`
    do
	/usr/sbin/svcadm disable -s $SVC
    done
}

case $# in
    2)
	case $1 in
	    -list)
		list_services $2
		;;
	    -show)
		show_services $2
		;;
	    -enable)
		enable_services $2
		;;
	    -disable)
		disable_services $2
		;;
	esac
	;;
    *)
	echo "Usage: $0 -list|-show|-enable|-disable overlay_name"
	exit 1
	;;
esac
