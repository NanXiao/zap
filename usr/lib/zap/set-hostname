#!/bin/ksh
#
# set hostname (or domainname)
#

DESTROOT=""
case $1 in
-C|-R)
	DESTROOT="$2"
	shift
	shift
	if [ ! -d "$DESTROOT" ]; then
	    echo "ERROR: alternate root $DESTROOT doesn't exist"
	    exit 1
	fi
	;;
esac

#
# if -d, then set the domainname
#
case $1 in
-d)
	DNAME=$2
	if [ -n "$DNAME" ]; then
	   echo "$DNAME" > "${DESTROOT}/etc/defaultdomain"
	   if [ -z "$DESTROOT" ]; then
	      /usr/bin/domainname "$DNAME"
	   fi
	fi
	exit 0
	;;
esac

case $# in
1)
	NODENAME="$1"
	;;
*)
	echo "Usage: set-hostname hostname"
	echo "       set-hostname -d domainname"
	exit 1
	;;
esac

#
# update /etc/nodename
# if a live environment, update the current hostname
# and restart mdnsd so the new name gets registered
#
if [ -n "$NODENAME" ]; then
    #
    # find the old name, which will be present in nodename if we've
    # set it, or the default name of tribblix
    #
    if [ -f "${DESTROOT}/etc/nodename" ]; then
	OLDNAME=$(<"${DESTROOT}/etc/nodename")
    else
	OLDNAME="tribblix"
    fi
    echo "$NODENAME" > "${DESTROOT}/etc/nodename"
    if [ -z "$DESTROOT" ]; then
	/usr/bin/hostname "$NODENAME"
	/usr/sbin/svcadm restart svc:/network/dns/multicast:default > /dev/null 2>&1
    fi
    #
    # do the best we can to fix up the hosts file
    # this will work if nothing else modifies it
    #
    if [ -n "$OLDNAME" ]; then
	sed -i "s: $OLDNAME : $NODENAME :" "${DESTROOT}/etc/inet/hosts"
	sed -i "s: ${OLDNAME}.local : ${NODENAME}.local :" "${DESTROOT}/etc/inet/hosts"
    fi
fi
